{"remainingRequest":"C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\src\\utils\\request.js","mtime":1618901635744},{"path":"C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\lizehan\\Documents\\GitHub\\Covid-19-Pro\\frontend_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vICAg5ZyoaHR0cC5qc+S4reW8leWFpWF4aW9zCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8v5byV5YWlIGF4aW9zCi8vIGltcG9ydCBxcyBmcm9tICdxcyc7IC8vIOW8leWFpXFz5qih5Z2X77yM55So5p2l5bqP5YiX5YyWcG9zdOexu+Wei+eahOaVsOaNru+8jOafkOS6m+ivt+axguS8mueUqOW+l+WIsAoKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOyAvL+W8leWFpSBlbGVtZW50LXVpIOeahCBNZXNzYWdlIOaooeWdl++8jOeUqOS6juS/oeaBr+aPkOekugovLyBpbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZScgICAgIC8v5byV5YWlIHZ1ZXgg5Lit55qE5pWw5o2uCi8vIGltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJyAgIC8v5byV5YWl5ou/5Yiw55qE5p2D6ZmQdG9ja2VuCi8vIGNyZWF0ZSBhbiBheGlvcyBpbnN0YW5jZSAgIOWIm+W7umF4aW9z5a6e5L6LCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogJ2h0dHBzOi8vYmRjNTFmMDktYzM3MC00MzE4LTlkMGQtNWNhY2I5ZmEyNjdmLm1vY2sucHN0bW4uaW8nLAogIC8vIGFwaSDnmoQgYmFzZV91cmwKICB0aW1lb3V0OiA1MDAwIC8vIHJlcXVlc3QgdGltZW91dCAg6K6+572u6K+35rGC6LaF5pe25pe26Ze0CiAgLy8gICAgIC8vIHJlc3BvbnNlVHlwZTogImpzb24iLAogIC8vICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsIC8vIOaYr+WQpuWFgeiuuOW4pmNvb2tpZei/meS6mwogIC8vICAgICBoZWFkZXJzOiB7CiAgLy8gICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04IgogIC8vIH0KCn0pOyAvLyBjcmVhdGUgYW4gYXhpb3MgaW5zdGFuY2UKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyDlnKjlj5HpgIHor7fmsYLkuYvliY3lgZrku4DkuYgKICBpZiAoY29uZmlnLm1ldGhvZCA9PT0gInBvc3QiKSB7CiAgICAvLyDluo/liJfljJYKICAgIC8vIGNvbmZpZy5kYXRhID0gcXMuc3RyaW5naWZ5KGNvbmZpZy5kYXRhKTsKICAgIGNvbmZpZy5kYXRhID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnLmRhdGEpOyAvLyDmuKnppqjmj5DnpLos6Iul5piv6LS15YWs5Y+455qE5o+Q5Lqk6IO955u05o6l5o6l5Y+XanNvbiDmoLzlvI8s5Y+v5Lul5LiN55SoIHFzIOadpeW6j+WIl+WMlueahAogIH0gZWxzZSB7Ly8gaWYgKHN0b3JlLmdldHRlcnMudG9rZW4pIHsKICAgICAgLy8gICAgIC8vIOiLpeaYr+acieWBmumJtOadg3Rva2VuICwg5bCx57uZ5aS06YOo5bim5LiKdG9rZW4KICAgICAgLy8gICAgIC8vIOiuqeavj+S4quivt+axguaQuuW4pnRva2VuLS0gWydYLVRva2VuJ13kuLroh6rlrprkuYlrZXkg6K+35qC55o2u5a6e6ZmF5oOF5Ya16Ieq6KGM5L+u5pS5CiAgICAgIC8vICAgICAvLyDoi6XmmK/pnIDopoHot6jnq5nngrks5a2Y5pS+5YiwIGNvb2tpZSDkvJrlpb3kuIDngrks6ZmQ5Yi25Lmf5rKh6YKj5LmI5aSaLOacieS6m+a1j+iniOeOr+Wig+mZkOWItuS6hiBsb2NhbHN0b3JhZ2UgKOmakOi6q+aooeW8jynnmoTkvb/nlKgKICAgICAgLy8gICAgIGNvbmZpZy5oZWFkZXJzWydYLVRva2VuJ10gPSBnZXRUb2tlbigpCiAgICAgIC8vIH0KICAgIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8g5a+56K+35rGC6ZSZ6K+v5YGa5Lqb5LuA5LmI77yM6Ieq5bex5a6a5LmJCiAgTWVzc2FnZSh7CiAgICAvL+S9v+eUqGVsZW1lbnQtdWnnmoRtZXNzYWdl6L+b6KGM5L+h5oGv5o+Q56S6CiAgICBzaG93Q2xvc2U6IHRydWUsCiAgICBtZXNzYWdlOiBlcnJvciwKICAgIHR5cGU6ICJ3YXJuaW5nIgogIH0pOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8vIOWmguaenOi/lOWbnueahOeKtuaAgeeggeS4ujIwMO+8jOivtOaYjuaOpeWPo+ivt+axguaIkOWKn++8jOWPr+S7peato+W4uOaLv+WIsOaVsOaNrgogIC8vIOWQpuWImeeahOivneaKm+WHuumUmeivrwogIC8vIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgewogIC8vICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTsKICAvLyB9IGVsc2UgewogIC8vICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzcG9uc2UpOwogIC8vIH0KICAvLwogIC8vIGNvbnNvbGUubG9nKCJyZXF1ZXN0LmpzOiByZXNwb25zZSA9ICIsIHJlc3BvbnNlKTsKICAvLyBsZXQgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgLy8gaWYgKGRhdGEucmVzQ29kZSAhPSAwKSB7CiAgLy8gICAgIC8vIOacjeWKoeWZqOacieWTjeW6lO+8jOS9huaYr+W5tuS4jeaYr+aDs+imgeeahOaVsOaNrgogIC8vICAgICAvLyBNZXNzYWdlLmVycm9yKGRhdGEubWVzc2FnZSk7CiAgLy8gICAgIGNvbnNvbGUubG9nKCLmnI3liqHlmajmnInlk43lupTvvIzkvYbmmK/lubbkuI3mmK/mg7PopoHnmoTmlbDmja4iKTsKICAvLyAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGRhdGEucmVzQ29kZSk7CiAgLy8gfSBlbHNlIHsKICAvLyAgICAgLy8g5pyN5Yqh5Zmo5pyJ5ZON5bqU77yM5bm25LiU5pWw5o2u5q2j56GuCiAgLy8gICAgIGNvbnNvbGUubG9nKCLmnI3liqHlmajmnInlk43lupTvvIzlubbkuJTmlbDmja7mraPnoa4iKTsKICAvLyAgICAgY29uc29sZS5sb2coInJlcXVlc3QuanM6IGRhdGEuZGF0YSA9ICIsIGRhdGEuZGF0YSk7CiAgLy8gICAgIHJldHVybiByZXNwb25zZTsKICAvLyB9CiAgcmV0dXJuIHJlc3BvbnNlOwp9LCAvLyDmnI3liqHlmajnirbmgIHnoIHkuI3mmK8y5byA5aS055qE55qE5oOF5Ya1Ci8vIOi/memHjOWPr+S7pei3n+S9oOS7rOeahOWQjuWPsOW8gOWPkeS6uuWRmOWNj+WVhuWlvee7n+S4gOeahOmUmeivr+eKtuaAgeeggQovLyDnhLblkI7moLnmja7ov5Tlm57nmoTnirbmgIHnoIHov5vooYzkuIDkupvmk43kvZzvvIzkvovlpoLnmbvlvZXov4fmnJ/mj5DnpLrvvIzplJnor6/mj5DnpLrnrYnnrYkKLy8g5LiL6Z2i5YiX5Li+5Yeg5Liq5bi46KeB55qE5pON5L2c77yM5YW25LuW6ZyA5rGC5Y+v6Ieq6KGM5omp5bGVCmZ1bmN0aW9uIChlcnJvcikgewogIC8vIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMpIHsKICAvLyAgICAgc3dpdGNoIChlcnJvci5yZXNwb25zZS5zdGF0dXMpIHsKICAvLyAgICAgICAgIC8vIDQwMTog5pyq55m75b2VCiAgLy8gICAgICAgICAvLyDmnKrnmbvlvZXliJnot7PovaznmbvlvZXpobXpnaLvvIzlubbmkLrluKblvZPliY3pobXpnaLnmoTot6/lvoQKICAvLyAgICAgICAgIC8vIOWcqOeZu+W9leaIkOWKn+WQjui/lOWbnuW9k+WJjemhtemdou+8jOi/meS4gOatpemcgOimgeWcqOeZu+W9lemhteaTjeS9nOOAggogIC8vICAgICAgICAgY2FzZSA0MDE6CiAgLy8gICAgICAgICAgICAgLy8gcm91dGVyLnJlcGxhY2UoewogIC8vICAgICAgICAgICAgIC8vICAgICBwYXRoOiAnL2xvZ2luJywKICAvLyAgICAgICAgICAgICAvLyAgICAgcXVlcnk6IHsKICAvLyAgICAgICAgICAgICAvLyAgICAgICAgIHJlZGlyZWN0OiByb3V0ZXIuY3VycmVudFJvdXRlLmZ1bGxQYXRoCiAgLy8gICAgICAgICAgICAgLy8gICAgIH0KICAvLyAgICAgICAgICAgICAvLyB9KTsKICAvLyAgICAgICAgICAgICBicmVhazsKICAvLwogIC8vICAgICAgICAgLy8gNDAzIHRva2Vu6L+H5pyfCiAgLy8gICAgICAgICAvLyDnmbvlvZXov4fmnJ/lr7nnlKjmiLfov5vooYzmj5DnpLoKICAvLyAgICAgICAgIC8vIOa4hemZpOacrOWcsHRva2Vu5ZKM5riF56m6dnVleOS4rXRva2Vu5a+56LGhCiAgLy8gICAgICAgICAvLyDot7PovaznmbvlvZXpobXpnaIKICAvLyAgICAgICAgIGNhc2UgNDAzOgogIC8vICAgICAgICAgICAgIC8vIE1lc3NhZ2UoewogIC8vICAgICAgICAgICAgIC8vICAgICBtZXNzYWdlOiAn55m75b2V6L+H5pyf77yM6K+36YeN5paw55m75b2VJywKICAvLyAgICAgICAgICAgICAvLyAgICAgZHVyYXRpb246IDEwMDAsCiAgLy8gICAgICAgICAgICAgLy8gICAgIGZvcmJpZENsaWNrOiB0cnVlCiAgLy8gICAgICAgICAgICAgLy8gfSk7CiAgLy8gICAgICAgICAgICAgLy8gLy8g5riF6ZmkdG9rZW4KICAvLyAgICAgICAgICAgICAvLyBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTsKICAvLyAgICAgICAgICAgICAvLyBzdG9yZS5jb21taXQoJ2xvZ2luU3VjY2VzcycsIG51bGwpOwogIC8vICAgICAgICAgICAgIC8vIC8vIOi3s+i9rOeZu+W9lemhtemdou+8jOW5tuWwhuimgea1j+iniOeahOmhtemdomZ1bGxQYXRo5Lyg6L+H5Y6777yM55m75b2V5oiQ5Yqf5ZCO6Lez6L2s6ZyA6KaB6K6/6Zeu55qE6aG16Z2iCiAgLy8gICAgICAgICAgICAgLy8gc2V0VGltZW91dCgoKSA9PiB7CiAgLy8gICAgICAgICAgICAgLy8gICAgIHJvdXRlci5yZXBsYWNlKHsKICAvLyAgICAgICAgICAgICAvLyAgICAgICAgIHBhdGg6ICcvbG9naW4nLAogIC8vICAgICAgICAgICAgIC8vICAgICAgICAgcXVlcnk6IHsKICAvLyAgICAgICAgICAgICAvLyAgICAgICAgICAgICByZWRpcmVjdDogcm91dGVyLmN1cnJlbnRSb3V0ZS5mdWxsUGF0aAogIC8vICAgICAgICAgICAgIC8vICAgICAgICAgfQogIC8vICAgICAgICAgICAgIC8vICAgICB9KTsKICAvLyAgICAgICAgICAgICAvLyB9LCAxMDAwKTsKICAvLyAgICAgICAgICAgICBicmVhazsKICAvLwogIC8vICAgICAgICAgLy8gNDA06K+35rGC5LiN5a2Y5ZyoCiAgLy8gICAgICAgICBjYXNlIDQwNDoKICAvLyAgICAgICAgICAgICAvLyBNZXNzYWdlKHsKICAvLyAgICAgICAgICAgICAvLyAgICAgbWVzc2FnZTogJ+e9kee7nOivt+axguS4jeWtmOWcqCcsCiAgLy8gICAgICAgICAgICAgLy8gICAgIGR1cmF0aW9uOiAxNTAwLAogIC8vICAgICAgICAgICAgIC8vICAgICBmb3JiaWRDbGljazogdHJ1ZQogIC8vICAgICAgICAgICAgIC8vIH0pOwogIC8vICAgICAgICAgICAgIGJyZWFrOwogIC8vICAgICAgICAgLy8g5YW25LuW6ZSZ6K+v77yM55u05o6l5oqb5Ye66ZSZ6K+v5o+Q56S6CiAgLy8gICAgICAgICBkZWZhdWx0OgogIC8vICAgICAgICAgICAgIE1lc3NhZ2UoewogIC8vICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UsCiAgLy8gICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAwLAogIC8vICAgICAgICAgICAgICAgICBmb3JiaWRDbGljazogdHJ1ZQogIC8vICAgICAgICAgICAgIH0pOwogIC8vICAgICB9CiAgLy8gICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvci5yZXNwb25zZSk7CiAgLy8gfQogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvci5yZXNwb25zZSk7Cn0pOwpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlLnJlcXVlc3Q7"},{"version":3,"sources":["C:/Users/lizehan/Documents/GitHub/Covid-19-Pro/frontend_vue/src/utils/request.js"],"names":["axios","Message","service","create","baseURL","timeout","interceptors","request","use","config","method","data","JSON","stringify","error","showClose","message","type","Promise","reject","response"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA4B;AAC5B;;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAAwC;AACxC;AACA;AAEA;;AACA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,4DADgB;AAC8C;AACvEC,EAAAA,OAAO,EAAE,IAFgB,CAEV;AACnB;AACA;AACA;AACA;AACA;;AAP6B,CAAb,CAAhB,C,CAUA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACN;AACA,MAAIA,MAAM,CAACC,MAAP,KAAkB,MAAtB,EAA8B;AAC1B;AACA;AACAD,IAAAA,MAAM,CAACE,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACE,IAAtB,CAAd,CAH0B,CAI1B;AACH,GALD,MAKM,CACF;AACA;AACA;AACA;AACA;AACA;AACH;;AACD,SAAOF,MAAP;AACH,CAjBL,EAkBI,UAAAK,KAAK,EAAI;AACL;AACAb,EAAAA,OAAO,CAAC;AAAmB;AACvBc,IAAAA,SAAS,EAAE,IADP;AAEJC,IAAAA,OAAO,EAAEF,KAFL;AAGJG,IAAAA,IAAI,EAAE;AAHF,GAAD,CAAP;AAKA,SAAOC,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACH,CA1BL,E,CA4BA;;AACAZ,OAAO,CAACI,YAAR,CAAqBc,QAArB,CAA8BZ,GAA9B,CACI,UAAAY,QAAQ,EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAOA,QAAP;AACH,CAzBL,EA0BI;AACA;AACA;AACA;AACA,UAAAN,KAAK,EAAI;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOI,OAAO,CAACC,MAAR,CAAeL,KAAK,CAACM,QAArB,CAAP;AACH,CAxFL;AA0FA,eAAelB,OAAO,CAACK,OAAvB","sourcesContent":["//   在http.js中引入axios\r\nimport axios from 'axios'   //引入 axios\r\n// import qs from 'qs'; // 引入qs模块，用来序列化post类型的数据，某些请求会用得到\r\nimport { Message } from 'element-ui'    //引入 element-ui 的 Message 模块，用于信息提示\r\n// import store from '@/store'     //引入 vuex 中的数据\r\n// import { getToken } from '@/utils/auth'   //引入拿到的权限tocken\r\n\r\n// create an axios instance   创建axios实例\r\nconst service = axios.create({\r\n    baseURL: 'https://bdc51f09-c370-4318-9d0d-5cacb9fa267f.mock.pstmn.io', // api 的 base_url\r\n    timeout: 5000, // request timeout  设置请求超时时间\r\n//     // responseType: \"json\",\r\n//     withCredentials: true, // 是否允许带cookie这些\r\n//     headers: {\r\n//     \"Content-Type\": \"application/json;charset=utf-8\"\r\n// }\r\n});\r\n\r\n// create an axios instance\r\nservice.interceptors.request.use(\r\n    config => {\r\n        // 在发送请求之前做什么\r\n        if (config.method === \"post\") {\r\n            // 序列化\r\n            // config.data = qs.stringify(config.data);\r\n            config.data = JSON.stringify(config.data);\r\n            // 温馨提示,若是贵公司的提交能直接接受json 格式,可以不用 qs 来序列化的\r\n        }else {\r\n            // if (store.getters.token) {\r\n            //     // 若是有做鉴权token , 就给头部带上token\r\n            //     // 让每个请求携带token-- ['X-Token']为自定义key 请根据实际情况自行修改\r\n            //     // 若是需要跨站点,存放到 cookie 会好一点,限制也没那么多,有些浏览环境限制了 localstorage (隐身模式)的使用\r\n            //     config.headers['X-Token'] = getToken()\r\n            // }\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        // 对请求错误做些什么，自己定义\r\n        Message({                  //使用element-ui的message进行信息提示\r\n            showClose: true,\r\n            message: error,\r\n            type: \"warning\"\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n    response => {\r\n        // 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据\r\n        // 否则的话抛出错误\r\n        // if (response.status === 200) {\r\n        //     return Promise.resolve(response);\r\n        // } else {\r\n        //     return Promise.reject(response);\r\n        // }\r\n        //\r\n        // console.log(\"request.js: response = \", response);\r\n        // let data = response.data;\r\n        // if (data.resCode != 0) {\r\n        //     // 服务器有响应，但是并不是想要的数据\r\n        //     // Message.error(data.message);\r\n        //     console.log(\"服务器有响应，但是并不是想要的数据\");\r\n        //     return Promise.reject(data.resCode);\r\n        // } else {\r\n        //     // 服务器有响应，并且数据正确\r\n        //     console.log(\"服务器有响应，并且数据正确\");\r\n        //     console.log(\"request.js: data.data = \", data.data);\r\n        //     return response;\r\n        // }\r\n\r\n        return response;\r\n    },\r\n    // 服务器状态码不是2开头的的情况\r\n    // 这里可以跟你们的后台开发人员协商好统一的错误状态码\r\n    // 然后根据返回的状态码进行一些操作，例如登录过期提示，错误提示等等\r\n    // 下面列举几个常见的操作，其他需求可自行扩展\r\n    error => {\r\n        // if (error.response.status) {\r\n        //     switch (error.response.status) {\r\n        //         // 401: 未登录\r\n        //         // 未登录则跳转登录页面，并携带当前页面的路径\r\n        //         // 在登录成功后返回当前页面，这一步需要在登录页操作。\r\n        //         case 401:\r\n        //             // router.replace({\r\n        //             //     path: '/login',\r\n        //             //     query: {\r\n        //             //         redirect: router.currentRoute.fullPath\r\n        //             //     }\r\n        //             // });\r\n        //             break;\r\n        //\r\n        //         // 403 token过期\r\n        //         // 登录过期对用户进行提示\r\n        //         // 清除本地token和清空vuex中token对象\r\n        //         // 跳转登录页面\r\n        //         case 403:\r\n        //             // Message({\r\n        //             //     message: '登录过期，请重新登录',\r\n        //             //     duration: 1000,\r\n        //             //     forbidClick: true\r\n        //             // });\r\n        //             // // 清除token\r\n        //             // localStorage.removeItem('token');\r\n        //             // store.commit('loginSuccess', null);\r\n        //             // // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面\r\n        //             // setTimeout(() => {\r\n        //             //     router.replace({\r\n        //             //         path: '/login',\r\n        //             //         query: {\r\n        //             //             redirect: router.currentRoute.fullPath\r\n        //             //         }\r\n        //             //     });\r\n        //             // }, 1000);\r\n        //             break;\r\n        //\r\n        //         // 404请求不存在\r\n        //         case 404:\r\n        //             // Message({\r\n        //             //     message: '网络请求不存在',\r\n        //             //     duration: 1500,\r\n        //             //     forbidClick: true\r\n        //             // });\r\n        //             break;\r\n        //         // 其他错误，直接抛出错误提示\r\n        //         default:\r\n        //             Message({\r\n        //                 message: error.response.data.message,\r\n        //                 duration: 1500,\r\n        //                 forbidClick: true\r\n        //             });\r\n        //     }\r\n        //     return Promise.reject(error.response);\r\n        // }\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\nexport default service.request\r\n"]}]}